name: Auto Merge gh-pages to master

on:
  push:
    branches:
      - gh-pages
  workflow_dispatch: # 允许手动触发

jobs:
  create-and-merge-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      # 检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 配置Git
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -B master origin/master || git checkout master
          git pull origin master

      # 确保gh-pages分支是最新的
      - name: Fetch and update gh-pages branch
        run: |
          git fetch origin gh-pages:gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          echo "Latest commit on gh-pages: $(git log -1 --oneline)"
          git checkout master
          echo "Latest commit on master: $(git log -1 --oneline)"
          echo "Checking differences between master and gh-pages..."
          DIFF_COUNT=$(git diff --name-only master..gh-pages | wc -l)
          echo "Found $DIFF_COUNT files different between branches"
          if [ $DIFF_COUNT -gt 0 ]; then
            echo "Sample of differing files:"
            git diff --name-only master..gh-pages | head -5
          fi
          echo "DIFF_COUNT=$DIFF_COUNT" >> $GITHUB_ENV

      # 创建临时分支
      - name: Create temporary branch
        if: env.DIFF_COUNT > 0
        run: |
          BRANCH_NAME="merge-gh-pages-$(date +%s)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME gh-pages
          git push origin $BRANCH_NAME
          echo "Created and pushed temporary branch: $BRANCH_NAME"

      # 创建Pull Request
      - name: Create Pull Request
        id: create_pr
        if: env.DIFF_COUNT > 0
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          base: master
          title: "Auto Merge: GH Pages Updates to Master"
          body: |
            This is an automatically generated pull request to merge updates from gh-pages branch to master branch.
            
            Triggered by commit: ${{ github.sha }}
            
            Detected ${{ env.DIFF_COUNT }} files different between branches.
            
            Please review the changes before merging.
          draft: false

      # 设置SKIP_MERGE环境变量
      - name: Set SKIP_MERGE variable
        if: env.DIFF_COUNT == 0
        run: |
          echo "No changes to merge between gh-pages and master"
          echo "SKIP_MERGE=true" >> $GITHUB_ENV

      # 检查PR是否成功创建
      - name: Check PR creation
        id: check_pr
        if: env.DIFF_COUNT > 0
        run: |
          if [ -z "${{ steps.create_pr.outputs.pull-request-number }}" ]; then
            echo "Failed to create pull request despite differences detected"
            echo "Displaying detailed differences between branches..."
            git diff --stat master..gh-pages
            echo "SKIP_MERGE=true" >> $GITHUB_ENV
          else
            echo "PR_NUMBER=${{ steps.create_pr.outputs.pull-request-number }}" >> $GITHUB_ENV
            echo "SKIP_MERGE=false" >> $GITHUB_ENV
          fi

      # 自动合并Pull Request
      - name: Auto Merge Pull Request
        if: env.SKIP_MERGE != 'true'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ env.PR_NUMBER }}
          merge-method: squash

      # 查看PR状态
      - name: Check PR status after enabling automerge
        if: env.SKIP_MERGE != 'true'
        run: |
          echo "PR #${{ env.PR_NUMBER }} details after enabling automerge:"
          gh pr view ${{ env.PR_NUMBER }} --json state,mergedAt,autoMergeRequest
          echo "PR URL: https://github.com/${{ github.repository }}/pull/${{ env.PR_NUMBER }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 手动合并PR（替代自动合并等待）
      - name: Merge PR manually if needed
        if: env.SKIP_MERGE != 'true'
        run: |
          echo "Attempting to merge PR #${{ env.PR_NUMBER }} manually..."
          PR_STATE=$(gh pr view ${{ env.PR_NUMBER }} --json state --jq .state)
          if [ "$PR_STATE" != "MERGED" ] && [ "$PR_STATE" != "CLOSED" ]; then
            echo "PR is still open, trying to merge manually..."
            gh pr merge ${{ env.PR_NUMBER }} --squash --delete-branch --subject "Auto Merge: GH Pages Updates to Master"
            echo "Manual merge command executed"
            # 检查合并结果
            sleep 10
            NEW_PR_STATE=$(gh pr view ${{ env.PR_NUMBER }} --json state --jq .state)
            if [ "$NEW_PR_STATE" = "MERGED" ]; then
              echo "PR merged successfully!"
            else
              echo "Failed to merge PR manually, current state: $NEW_PR_STATE"
            fi
          else
            echo "PR is already $PR_STATE, skipping manual merge"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 清理临时分支
      - name: Clean up temporary branch
        if: always() && env.BRANCH_NAME != ''
        run: |
          git push origin --delete ${{ env.BRANCH_NAME }} || echo "Branch already deleted"
          echo "Cleaned up temporary branch: ${{ env.BRANCH_NAME }}"